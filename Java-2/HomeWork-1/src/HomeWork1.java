/*
1. Создайте три класса Человек, Кот, Робот, которые не наследуются от одного класса.
Эти классы должны уметь бегать и прыгать (методы просто выводят информацию о действии в консоль).
2. Создайте два класса: беговая дорожка и стена, при прохождении через которые,
участники должны выполнять соответствующие действия (бежать или прыгать),
результат выполнения печатаем в консоль (успешно пробежал, не смог пробежать и т.д.).
3. Создайте два массива: с участниками и препятствиями, и заставьте всех участников пройти этот набор препятствий.
4. У препятствий есть длина (для дорожки) или высота (для стены), а участников ограничения на бег и прыжки.
Если участник не смог пройти одно из препятствий, то дальше по списку он препятствий не идет.

ПО ЖЕЛАНИЮ и при наличии большого запаса времени
5*. Добавить класс Team, который будет содержать: название команды, массив из 4-х участников
(т.е. в конструкторе можно сразу всех участников указывать), метод для вывода информации о членах команды прошедших дистанцию,
метод вывода информации обо всех членах команды.
6*. Добавить класс Course (полоса препятствий), в котором будут находиться: массив препятствий,
метод который будет просить команду пройти всю полосу;

 */

import barriers.Treadmill;
import barriers.Wall;
import members.Cat;
import members.Human;
import members.Robot;

import java.util.ArrayList;
import java.util.List;

public class HomeWork1 {

    public static void main(String[] args) {

        List<Object> team = new ArrayList<>();
        team.add(new Cat("Васька", 1500, 5));
        team.add(new Human("Петька", 500, 3));
        team.add(new Robot("Электроник", 2500, 1));

        List<Object> course = new ArrayList<>();
        course.add(new Treadmill(600));
        course.add(new Wall(5));

        for (int i = 0; i < team.size(); i++) {
            String member = team.get(i).getClass().;
            System.out.println(member);
            for (int j = 0; j < course.size(); j++) {

            }


        }
    }
}

